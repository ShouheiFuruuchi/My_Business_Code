# -*- coding: utf-8 -*-
from reportlab.pdfgen import canvas
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.cidfonts import UnicodeCIDFont
from reportlab.lib.pagesizes import A4, portrait
from reportlab.platypus import Table, TableStyle
from reportlab.lib.units import mm
from reportlab.lib import colors


#指示リスト作成
import openpyxl as pyxl
import os
import pandas as pd
import datetime

USER = "古内翔平"
file_path = "C:/Users/{}/Downloads/指示CHECKリスト【2023】 (1).xlsx".format(USER)

WB = pyxl.load_workbook(file_path,data_only=True)
WS = WB["チェックリスト"]


last_row = int(WS["C3"].value)#(int(WS["C3"].value) * 2 ) + 4

print(last_row)

CHECK_LIST = []
start_row = 5
index_no = 0
shop_col = 41
for row in range(last_row):
    
    ck_point = WS["AN" + str(start_row + (row * 2))].value 
    # print("判定",ck_point)
    # print("AN" + str(start_row + (row * 2)))
    
    if ck_point != "完了" :
        for shop_no in range(20) :
            shop_name = WS.cell(2,shop_no + shop_col).value
            shop_ck = WS.cell(start_row + (row*2),shop_no + shop_col).value
            check_item = WS.cell(start_row + (row*2),3).value
            due_date = WS.cell(start_row + (row*2),7).value
            y = due_date.year
            m = due_date.month
            d = due_date.day
            
            Due_Date = str(y) + "/" + str(m) + "/" + str(d) 
            DOW = WS.cell(start_row + (row*2),8).value
            print(check_item)
            print(shop_ck)
            
            if shop_ck == 1 :
                items = pd.DataFrame({"店舗名":[shop_name],"CHECK項目":[check_item],"期日":[Due_Date],"曜日":[DOW]})
                CHECK_LIST.append(items)
            
        
Concat_CHECKLIST = pd.concat(CHECK_LIST)

print(Concat_CHECKLIST)

#=============================================================================
#=============================================================================

# 初期設定
def make(filename="resume"): # ファイル名
    pdf_canvas = set_info(filename) # キャンバス名
    print_string(pdf_canvas)
    pdf_canvas.save() # 保存

def set_info(filename):
    
    width, height = A4 # 用紙サイズ
    #pdf_canvas = canvas.Canvas("./{0}.pdf".format(filename)) # 保存先
    pdf_canvas = canvas.Canvas("./{0}.pdf".format(filename),pagesize=(height, width)) # 保存先
    pdf_canvas.setAuthor("") # 作者
    pdf_canvas.setTitle("") # 表題
    pdf_canvas.setSubject("") # 件名
    return pdf_canvas

#履歴書フォーマット作成
def print_string(pdf_canvas):
    mode = 0
    if mode == 0 :
        font_model = 'HeiseiMin-W3'
        pdfmetrics.registerFont(UnicodeCIDFont('HeiseiMin-W3'))#'HeiseiKakuGo-W5')) # フォント
        width, height = A4 # 用紙サイズ
        
    elif mode == 1 :
        font_model = 'HeiseiKakuGo-W5'   
        pdfmetrics.registerFont(UnicodeCIDFont(font_model))#'HeiseiKakuGo-W5')) # フォント
        width, height = A4 # 用紙サイズ
        
        

  # (1)履歴書 タイトル
    font_size = 8 # フォントサイズ
    pdf_canvas.setFont(font_model, font_size)
    pdf_canvas.drawString(650, 550, '※時間帯予算の見方') # 書き出し(横位置, 縦位置, 文字)
    pdf_canvas.drawString(650, 540, '(例) 12:00 ⇒ 12:00～12:59') # 書き出し(横位置, 縦位置, 文字)

    # (2)作成日
    # font_size = 10
    # pdf_canvas.setFont('HeiseiKakuGo-W5', font_size)
    # pdf_canvas.drawString(60, 500,  '    年         月         日現在')

    # (3)証明写真
    # tableを作成
    data = [
            ['　　　Time Schedule'],
            
        ]
    table = Table(data, colWidths=40*mm, rowHeights=6*mm) # tableの大きさ
    table.setStyle(TableStyle([                              # tableの装飾
            ('FONT', (0, 0), (0, 0), font_model, 8), # フォントサイズ
            ('BOX', (0, 0), (0, 0), 1, colors.black),        # 罫線
            ('VALIGN', (0, 0), (0, 0), 'MIDDLE'),    # フォント位置
            ('BACKGROUND',(0, 0), (0, 0),colors.gray), #背景色設定
        ]))

    table.wrapOn(pdf_canvas, 10*mm, 200*mm) # table位置
    table.drawOn(pdf_canvas, 10*mm, 200*mm) 
    
    data_2 = [
            ['　朝礼時の役割共有やスケジュール管理\n　に活用して下さい'],
            
        ]
    table_2 = Table(data_2, colWidths=40*mm, rowHeights=12*mm) # tableの大きさ
    table_2.setStyle(TableStyle([                              # tableの装飾
            ('FONT', (0, 0), (0, 0), font_model, 5), # フォントサイズ
            ('BOX', (0, 0), (0, 0), 1, colors.black),        # 罫線
            ('VALIGN', (0, 0), (0, 0), 'MIDDLE'),    # フォント位置
            #('BACKGROUND',(0, 0), (0, 0),colors.gray), #背景色設定
        ]))

    table_2.wrapOn(pdf_canvas, 10*mm, 188*mm) # table位置
    table_2.drawOn(pdf_canvas, 10*mm, 188*mm)   
    
    
    # 売上データセット
    # tableを作成
    data2 = [
            ['　　　　店舗名','　FUNららぽーとEXPOCITY　','　　　　2023/11/15　　','　　　　　水曜日'],
        ]
    table2 = Table(data2, colWidths=40*mm, rowHeights=6*mm) # tableの大きさ
    table2.setStyle(TableStyle([                              # tableの装飾
            ('FONT', (0, 0), (0, 0), font_model, 8), # フォントサイズ
            ('FONT', (1, 0), (1, 0), font_model, 7), # フォントサイズ
            ('FONT', (2, 0), (2, 0), font_model, 8), # フォントサイズ
            ('FONT', (3, 0), (3, 0), font_model, 8), # フォントサイズ
            
            ('BOX', (0, 0), (3, 0), 1, colors.black),  
            ('INNERGRID',(0,0),(-1,-1),1,colors.black),        # 罫線
            
            ('BACKGROUND',(0, 0), (0, 0),colors.gray), #背景色設定
            
            #('BACKGROUND',(2, 0), (2, 0),colors.gray), #背景色設定
            
            ('VALIGN', (0, 0), (3, 0), 'MIDDLE'),            # フォント位置
        ]))
    table2.wrapOn(pdf_canvas, 60*mm, 200*mm) # table位置
    table2.drawOn(pdf_canvas, 60*mm, 200*mm)      
    
    
    # 店別詳細
    # tableを作成
    data3 = [
            ['　　　　売上予算', '　　　　　　　　{}'.format(130000) ,'　　　P処理目標時間','  '],
            ['　　　パッキン数','　　　　　　　　　{}P'.format(10),'　　　　　人員数','　　　　　　　　　　{}名'.format(5)],
        ]
    table3 = Table(data3, colWidths=40*mm, rowHeights=6*mm) # tableの大きさ
    table3.setStyle(TableStyle([                              # tableの装飾
            ('FONT', (0, 0), (3, 1),font_model, 8), # フォントサイズ
            
            ('BOX', (0, 0), (3, 1), 1, colors.black),  
            ('INNERGRID',(0,0),(-1,-1),1,colors.black),        # 罫線
            
            ('BACKGROUND',(0, 0), (0, 0),colors.gray), #背景色設定
            
            ('BACKGROUND',(2, 0), (2, 0),colors.gray), #背景色設定
            
            ('BACKGROUND',(0, 1), (0, 1),colors.gray), #背景色設定
            
            ('BACKGROUND',(2, 1), (2, 1),colors.gray), #背景色設定
            
            ('VALIGN', (0, 0), (0, 0), 'MIDDLE'),            # フォント位置
        ]))
    table3.wrapOn(pdf_canvas, 60*mm, 188*mm) # table位置
    table3.drawOn(pdf_canvas, 60*mm, 188*mm)   
    
    post1 ="Ara MG"
    post2 ="Ara MG"
    post3 ="Ara MG"
    post4 ="Ara MG"
    post5 ="Ara MG"
    post6 ="Ara MG"
    post7 ="Ara MG"
    post8 ="Ara MG"
    post9 ="Ara MG"
    post10 ="Ara MG"
    
    #本部
    H_post1 ="Ara MG"
    H_post2 ="Ara MG"
    H_post3 ="Ara MG"
    
    #ヘルプ
    S_post1 ="Ara MG"
    S_post2 ="Ara MG"
    S_post3 ="Ara MG"
    
    
    Staff1 = "古内翔平"
    Staff2 = "古内翔平"
    Staff3 = "古内翔平"
    Staff4 = "古内翔平"
    Staff5 = "古内翔平"
    Staff6 = "古内翔平"
    Staff7 = "古内翔平"
    Staff8 = "古内翔平"
    Staff9 = "古内翔平"
    Staff10 = "古内翔平"
    
    #本部
    H_Staff1 = "古内翔平"
    H_Staff2 = "古内翔平"
    H_Staff3 = "古内翔平"
    
    #ヘルプ
    S_Staff1 = "古内翔平"
    S_Staff2 = "古内翔平"
    S_Staff3 = "古内翔平"
    
    #時間帯構成比
    t8 = 0
    t9 = 0
    t10 = 5
    t11= 5
    t12 = 10
    t13 = 10.5
    t14 = 10.5
    t15 = 10.5
    t16 = 0
    t17 = 0
    t18 = 0
    t19 = 0
    t20 = 0
    t21 = 0
    t22 = 0
    
    #時間帯予算
    
    bug8 = 0
    bug9 = 0
    bug10 = 0
    bug11 = 0
    bug12 = 0
    bug13 = 100000
    bug14 = 100000
    bug15 = 200000
    bug16 = 0
    bug17 = 0
    bug18 = 0
    bug19 = 0
    bug20 = 0
    bug21 = 0
    bug22 = 0
    
    prog8 = bug8
    prog9= prog8 + bug9
    prog10 = prog9 + bug10
    prog11= prog10 + bug11
    prog12 = prog11 + bug12
    prog13 = prog12 + bug13
    prog14 = prog13 + bug14
    prog15 = prog14 + bug15
    prog16 = prog15 + bug16
    prog17 = prog16 + bug17
    prog18 = prog17 + bug17
    prog19 = prog18 + bug17
    prog20 = prog19 + bug17
    prog21 = prog20 + bug17
    prog22 = prog21 + bug17
    
    
    # 店舗スケジュール表1
    # tableを作成
    
    data4 = [
            ['　　　　　　　出勤STAFF一覧','','','','','','', '',''],
            ['','','','','','','', '',''],
            ['店　舗\nSTAFF','　　役職','','　STAFF名','','販売力','シフト', '　　ポジション',''],
            ['','','','','','','', 'メイン','サブ'],
            ['','','','','','','', '',''],
            

            ['','　　{}'.format(post1),'','　　{}'.format(Staff1),'','','', '',''],
            ['','　　{}'.format(post2),'','　　{}'.format(Staff2),'','','', '',''],
            ['','　　{}'.format(post3),'','　　{}'.format(Staff3),'','','', '',''],
            ['','　　{}'.format(post4),'','　　{}'.format(Staff4),'','','', '',''],
            ['','　　{}'.format(post5),'','　　{}'.format(Staff5),'','','', '',''],
            ['','　　{}'.format(post6),'','　　{}'.format(Staff6),'','','', '',''],
            ['','　　{}'.format(post7),'','　　{}'.format(Staff7),'','','', '',''],
            ['','　　{}'.format(post8),'','　　{}'.format(Staff8),'','','', '',''],
            ['','　　{}'.format(post9),'','　　{}'.format(Staff9),'','','', '',''],
            ['','　　{}'.format(post10),'','　　{}'.format(Staff10),'','','', '',''],
            
            #本部ヘルプ
            ['本　部\nヘルプ','　　{}'.format(H_post1),'','　　{}'.format(H_Staff1),'','','', '',''],
            ['','　　{}'.format(H_post2),'','　　{}'.format(H_Staff2),'','','', '',''],
            ['','　　{}'.format(H_post3),'','　　{}'.format(H_Staff3),'','','', '',''],
            
            #ヘルプ
            ['店　舗\nヘルプ','　　{}'.format(S_post1),'','　　{}'.format(S_Staff1),'','','', '',''],
            ['','　　{}'.format(S_post2),'','　　{}'.format(S_Staff2),'','','', '',''],
            ['','　　{}'.format(S_post3),'','　　{}'.format(S_Staff3),'','','', '',''],
          
            
            
            
 
        ]
    table4 = Table(data4, colWidths=10*mm, rowHeights=5*mm) # tableの大きさ
    table4.setStyle(TableStyle([                             # tableの装飾
            ('FONT', (0, 0), (8, 1),font_model, 10),
            ('FONT', (1, 1), (4, 4),font_model, 7),
            ('FONT', (0, 2), (0, 14),font_model, 5),
            ('FONT', (5, 2), (8, 4),font_model, 5),
            ('FONT', (0, 5), (24, 20),font_model, 5), # フォントサイズ

            ('BOX', (0, 0), (24, 14), 1, colors.black),
            ('BOX', (1, 5), (24, 20), 1, colors.black),  
            
            ('BOX', (0, 15), (23, 17), 1, colors.black), 
            ('BOX', (0, 18), (23, 20), 1, colors.black), 
            
            
            ('SPAN',(0, 0), (8, 1)),
            ('SPAN',(5, 0), (6, 1)),
            
            ('SPAN',(0,2),(0,14)),
            ('VALIGN', (0,2),(0,14), 'MIDDLE'),
            ('SPAN',(0,15),(0,17)),
            ('VALIGN', (0,15),(0,17), 'MIDDLE'),
            ('SPAN',(0,18),(0,20)),
            ('VALIGN', (0,18),(0,20), 'MIDDLE'),
            
            ('SPAN',(1,2),(2,4)),
            ('VALIGN', (1, 2), (2, 4), 'MIDDLE'),
            ('SPAN',(3,2),(4,4)),
            ('VALIGN', (3, 2), (4, 4), 'MIDDLE'),
            ('SPAN',(5,2),(5,4)),
            ('VALIGN', (5, 2), (5, 4), 'MIDDLE'),
            ('SPAN',(6,2),(6,4)),
            ('VALIGN', (6, 2), (6, 4), 'MIDDLE'),
            
            ('SPAN',(7,2),(8,2)),
            ('VALIGN', (7, 2), (8, 2), 'MIDDLE'),
            
            ('SPAN',(7,3),(7,4)),
            ('VALIGN', (7, 3), (7, 4), 'MIDDLE'),
            
            ('SPAN',(8,3),(8,4)),
            ('VALIGN', (8, 3), (8, 4), 'MIDDLE'),
            
            #役職欄結合
            # ('SPAN',(1,0),(2,0)),
            # ('SPAN',(1,1),(2,1)),
            # ('SPAN',(1,2),(2,2)),
            ('SPAN',(1,3),(2,3)),
            ('SPAN',(1,4),(2,4)),
            ('SPAN',(1,5),(2,5)),
            ('SPAN',(1,6),(2,6)),
            ('SPAN',(1,7),(2,7)),
            ('SPAN',(1,8),(2,8)),
            ('SPAN',(1,9),(2,9)),
            ('SPAN',(1,10),(2,10)),
            ('SPAN',(1,11),(2,11)),
            ('SPAN',(1,12),(2,12)),
            ('SPAN',(1,13),(2,13)),
            ('SPAN',(1,14),(2,14)),
            
            ('SPAN',(1,15),(2,15)),
            ('SPAN',(1,16),(2,16)),
            ('SPAN',(1,17),(2,17)),
            ('SPAN',(1,18),(2,18)),
            ('SPAN',(1,19),(2,19)),
            ('SPAN',(1,20),(2,20)),
            
            #STAFF欄結合
            # ('SPAN',(3,0),(4,0)),
            # ('SPAN',(3,1),(4,1)),
            # ('SPAN',(3,2),(4,2)),
            ('SPAN',(3,3),(4,3)),
            ('SPAN',(3,4),(4,4)),
            ('SPAN',(3,5),(4,5)),
            ('SPAN',(3,6),(4,6)),
            ('SPAN',(3,7),(4,7)),
            ('SPAN',(3,8),(4,8)),
            ('SPAN',(3,9),(4,9)),
            ('SPAN',(3,10),(4,10)),
            ('SPAN',(3,11),(4,11)),
            ('SPAN',(3,12),(4,12)),
            ('SPAN',(3,13),(4,13)),
            ('SPAN',(3,14),(4,14)),
            
            ('SPAN',(3,15),(4,15)),
            ('SPAN',(3,16),(4,16)),
            ('SPAN',(3,17),(4,17)),
            ('SPAN',(3,18),(4,18)),
            ('SPAN',(3,19),(4,19)),
            ('SPAN',(3,20),(4,20)),
            
            
            ('INNERGRID',(0,0),(-1,-1),0.5,colors.black),        # 罫線
            
            ('BACKGROUND',(0, 0), (0, 0),colors.gray), #背景色設定
            
            ('BACKGROUND',(2, 0), (2, 0),colors.gray), #背景色設定
            
            ('BACKGROUND',(0, 1), (0, 1),colors.gray), #背景色設定
            
            ('BACKGROUND',(2, 1), (2, 1),colors.gray), #背景色設定
            
            ('VALIGN', (0, 0), (0, 0), 'MIDDLE'),            # フォント位置
        ]))
    table4.wrapOn(pdf_canvas, 10*mm, 75*mm) # table位置
    table4.drawOn(pdf_canvas, 10*mm, 75*mm)         
    
    
    # 店舗スケジュール表2
    # tableを作成
    data4 = [
            ['　　時間帯','','　8:00','　9:00','10:00', '11:00','12:00','13:00','14:00','15:00','16:00', '17:00','18:00','19:00','20:00','21:00','22:00'],
            ['　　構成比','','{}%'.format(t8),'{}%'.format(t9),'{}%'.format(t10),'{}%'.format(t11),'{}%'.format(t12),'{}%'.format(t13),'{}%'.format(t14),'{}%'.format(t15),'{}%'.format(t16), '{}%'.format(t17),'{}%'.format(t18),'{}%'.format(t19),'{}%'.format(t20),'{}%'.format(t21),'{}%'.format(t22)],
            ['　時間帯予算','','{:,}'.format(bug8),'{:,}'.format(bug9),'{:,}'.format(bug10),'{:,}'.format(bug11),'{:,}'.format(bug12),'{:,}'.format(bug13),'{:,}'.format(bug14),'{:,}'.format(bug15),'{:,}'.format(bug16), '{:,}'.format(bug17),'{:,}'.format(bug18),'{:,}'.format(bug19),'{:,}'.format(bug20),'{:,}'.format(bug21),'{:,}'.format(bug22)],
            ['　売上進行率','','{:,}'.format(prog8),'{:,}'.format(prog9),'{:,}'.format(prog10),'{:,}'.format(prog11),'{:,}'.format(prog12),'{:,}'.format(prog13),'{:,}'.format(prog14),'{:,}'.format(prog15),'{:,}'.format(prog16), '{:,}'.format(prog17),'{:,}'.format(prog18),'{:,}'.format(prog19),'{:,}'.format(prog20),'{:,}'.format(prog21),'{:,}'.format(prog22)],
            ['　時間帯実績','','','','', '','','','','','', '','','','','',''],

            ['','','','','','','', '','','','','','', '','','',''],
            ['','','','','','','', '','','','','','', '','','',''],
            ['','','','','','','', '','','','','','', '','','',''],
            ['','','','','','','', '','','','','','', '','','',''],
            ['','','','','','','', '','','','','','', '','','',''],
            ['','','','','','','', '','','','','','', '','','',''],
            ['','','','','','','', '','','','','','', '','','',''],
            ['','','','','','','', '','','','','','', '','','',''],
            ['','','','','','','', '','','','','','', '','','',''],
            ['','','','','','','', '','','','','','', '','','',''],
            
            #本部ヘルプ
            ['','','','','','','', '','','','','','', '','','',''],
            ['','','','','','','', '','','','','','', '','','',''],
            ['','','','','','','', '','','','','','', '','','',''],
            
            #店舗ヘルプ
            ['','','','','','','', '','','','','','', '','','',''],
            ['','','','','','','', '','','','','','', '','','',''],
            ['','','','','','','', '','','','','','', '','','',''],

            
            
 
        ]
    table4 = Table(data4, colWidths=10.7*mm, rowHeights=5*mm) # tableの大きさ
    table4.setStyle(TableStyle([                             # tableの装飾
            ('FONT', (0, 0), (23, 21), font_model, 6), # フォントサイズ
            
            ('BOX', (0, 0), (23, 14), 1, colors.black), 
            ('BOX', (0, 5), (23, 14), 1, colors.black), 
             
            ('BOX', (0, 15), (23, 17), 1, colors.black), 
            ('BOX', (0, 18), (23, 21), 1, colors.black),  
            
            ('SPAN',(0,0),(1,0)),
            ('SPAN',(0,1),(1,1)),
            ('SPAN',(0,2),(1,2)),
            ('SPAN',(0,3),(1,3)),
            ('SPAN',(0,4),(1,4)),
            ('SPAN',(0,5),(1,5)),
            ('SPAN',(0,6),(1,6)),
            ('SPAN',(0,7),(1,7)),
            ('SPAN',(0,8),(1,8)),
            ('SPAN',(0,9),(1,9)),
            ('SPAN',(0,10),(1,10)),
            ('SPAN',(0,11),(1,11)),
            ('SPAN',(0,12),(1,12)),
            ('SPAN',(0,13),(1,13)),
            ('SPAN',(0,14),(1,14)),
            
            ('SPAN',(0,15),(1,15)),
            ('SPAN',(0,16),(1,16)),
            ('SPAN',(0,17),(1,17)),
            ('SPAN',(0,18),(1,18)),
            ('SPAN',(0,19),(1,19)),
            ('SPAN',(0,20),(1,20)),
            

            
            ('INNERGRID',(0,0),(-1,-1),0.5,colors.black),        # 罫線
            ('INNERGRID',(0,16),(-1,-1),0.5,colors.black), 
            
            ('INNERGRID',(0,18),(-1,-1),0.5,colors.black), 

            
            ('VALIGN', (0, 0), (0, 0), 'MIDDLE'),            # フォント位置
        ]))
    table4.wrapOn(pdf_canvas, 100*mm, 75*mm) # table位置
    table4.drawOn(pdf_canvas, 100*mm, 75*mm)        
    
    #指示チェックリスト
    shop_key = "柏"
    #ベースリスト
    data5_1 = [
            ["期日","曜日"],
            
        ]
    
    data5_2 = [
            ["未完指示事項"],
            
        ]
    
    SELECT_DATA = Concat_CHECKLIST[Concat_CHECKLIST["店舗名"] == shop_key ]
    counter = 0
    for out_data in SELECT_DATA.values:
        append_data_1 = [out_data[2],out_data[3]]
        append_data_2 = [out_data[1]]
        data5_1.append(append_data_1)
        data5_2.append(append_data_2)
        counter += 1
    
    height_picth = 65 - (counter * 5 )
    
    table5_1 = Table(data5_1, colWidths=20*mm, rowHeights=5*mm) # tableの大きさ
    table5_1.setStyle(TableStyle([                              # tableの装飾
            ('FONT', (0, 0), (2, 1 + counter), font_model, 8), # フォントサイズ
            ('BOX', (0, 0), (2, 0 + counter), 1, colors.black),        # 罫線
            ('VALIGN', (0, 0), (0, 0), 'MIDDLE'),    # フォント位置
            ('BACKGROUND',(0, 0), (2, 0),colors.gray), #背景色設定
            ('INNERGRID',(0,0),(-1,-1),0.5,colors.black),
        ]))

    table5_1.wrapOn(pdf_canvas, 10*mm, height_picth*mm) # table位置
    table5_1.drawOn(pdf_canvas, 10*mm, height_picth*mm)  
    
    
    table5_2 = Table(data5_2, colWidths=70*mm, rowHeights=5*mm) # tableの大きさ
    table5_2.setStyle(TableStyle([                              # tableの装飾
            ('FONT', (0, 0), (1, 1 + counter), font_model, 8), # フォントサイズ
            ('BOX', (0, 0), (1, 1 + counter), 1, colors.black),        # 罫線
            ('VALIGN', (0, 0), (0, 0), 'MIDDLE'),    # フォント位置
            ('BACKGROUND',(0, 0), (2, 0),colors.gray), #背景色設定
            ('INNERGRID',(0,0),(-1,-1),0.5,colors.black),
        ]))

    table5_2.wrapOn(pdf_canvas, 50*mm, height_picth*mm) # table位置
    table5_2.drawOn(pdf_canvas, 50*mm, height_picth*mm)  
    
    #備考欄作成
    data6 = [
            ['　【　備考欄　】'],
            [],
            [],
            [],
            [],
            [],
            
        ]
    table6 = Table(data6, colWidths=152*mm, rowHeights=10*mm) # tableの大きさ
    table6.setStyle(TableStyle([                              # tableの装飾
            ('FONT', (0, 0), (0, 0), font_model, 8), # フォントサイズ
            ('BOX', (0, 0), (0, 4), 1, colors.black),        # 罫線
            ('VALIGN', (0, 0), (0, 0), 'TOP'),    # フォント位置
            #('BACKGROUND',(0, 0), (0, 0),colors.gray), #背景色設定
        ]))


    table6.wrapOn(pdf_canvas, 130*mm, 10*mm) # table位置
    table6.drawOn(pdf_canvas, 130*mm, 10*mm) 
    


    # 2枚目終了
    pdf_canvas.showPage()


# 作成
if __name__ == '__main__':
    make()


